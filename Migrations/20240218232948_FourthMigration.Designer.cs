// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ImageRecongnitionMQTT.Migrations
{
    [DbContext(typeof(ImageRecognitionContext))]
    [Migration("20240218232948_FourthMigration")]
    partial class FourthMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeamItemModel", b =>
                {
                    b.Property<string>("IdBeamItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdBeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemModelIdItem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("seenAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdBeamItem");

                    b.HasIndex("ItemModelIdItem");

                    b.ToTable("BeamItems");
                });

            modelBuilder.Entity("BeamModel", b =>
                {
                    b.Property<string>("IdBeam")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CanBeSaved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarkerValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarkerValueBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdBeam");

                    b.ToTable("Beams");
                });

            modelBuilder.Entity("BeamModelItemModel", b =>
                {
                    b.Property<string>("BeamsIdBeam")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemsIdItem")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BeamsIdBeam", "ItemsIdItem");

                    b.HasIndex("ItemsIdItem");

                    b.ToTable("BeamModelItemModel");
                });

            modelBuilder.Entity("Esp32Model", b =>
                {
                    b.Property<string>("IdEsp32")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdEsp32");

                    b.ToTable("Esp32s");
                });

            modelBuilder.Entity("ImageModel", b =>
                {
                    b.Property<string>("IdImage")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AsBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TakenBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdImage");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("ItemModel", b =>
                {
                    b.Property<string>("IdItem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarkerValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarkerValueBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdItem");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("BeamItemModel", b =>
                {
                    b.HasOne("ItemModel", null)
                        .WithMany("beamItems")
                        .HasForeignKey("ItemModelIdItem");
                });

            modelBuilder.Entity("BeamModelItemModel", b =>
                {
                    b.HasOne("BeamModel", null)
                        .WithMany()
                        .HasForeignKey("BeamsIdBeam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ItemModel", null)
                        .WithMany()
                        .HasForeignKey("ItemsIdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ItemModel", b =>
                {
                    b.Navigation("beamItems");
                });
#pragma warning restore 612, 618
        }
    }
}
